"""initial_migration

Revision ID: 8fdc6d573673
Revises: 
Create Date: 2025-07-18 11:44:18.353005

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8fdc6d573673'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_name', sa.String(length=255), nullable=False),
    sa.Column('job_number', sa.String(length=50), nullable=False),
    sa.Column('directory_path', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('total_pdf_files', sa.Integer(), nullable=True),
    sa.Column('total_size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('main_contract_filename', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('directory_path')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('picture_url', sa.String(length=500), nullable=True),
    sa.Column('credits_remaining', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('total_credits_purchased', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('has_premium', sa.Boolean(), nullable=False),
    sa.Column('subscription_status', sa.String(length=50), nullable=False),
    sa.Column('subscription_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('subscription_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('google_id')
    )
    op.create_index(op.f('ix_users_stripe_customer_id'), 'users', ['stripe_customer_id'], unique=False)
    op.create_index(op.f('ix_users_stripe_subscription_id'), 'users', ['stripe_subscription_id'], unique=False)
    op.create_table('analysis_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('session_type', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('total_documents', sa.Integer(), nullable=True),
    sa.Column('successful_extractions', sa.Integer(), nullable=True),
    sa.Column('successful_classifications', sa.Integer(), nullable=True),
    sa.Column('failed_files', sa.Text(), nullable=True),
    sa.Column('total_time_seconds', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('estimated_cost', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('file_size_kb', sa.Integer(), nullable=False),
    sa.Column('file_size_mb', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('file_modified_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_accessible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analysis_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('importance_score', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('priority_level', sa.String(length=50), nullable=True),
    sa.Column('is_main_contract', sa.Boolean(), nullable=True),
    sa.Column('ranking_reason', sa.Text(), nullable=True),
    sa.Column('analysis_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('analyzer_version', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_classifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('classification_method', sa.String(length=50), nullable=True),
    sa.Column('document_type', sa.String(length=50), nullable=True),
    sa.Column('importance', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.String(length=20), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('recommendation', sa.String(length=50), nullable=True),
    sa.Column('key_parties', sa.Text(), nullable=True),
    sa.Column('dollar_amount', sa.String(length=100), nullable=True),
    sa.Column('project_info', sa.Text(), nullable=True),
    sa.Column('ai_model', sa.String(length=100), nullable=True),
    sa.Column('ai_tokens_used', sa.Integer(), nullable=True),
    sa.Column('classification_time_seconds', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('classification_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_extractions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('extraction_method', sa.String(length=50), nullable=False),
    sa.Column('extracted_text', sa.Text(), nullable=True),
    sa.Column('text_length', sa.Integer(), nullable=True),
    sa.Column('extraction_success', sa.Boolean(), nullable=True),
    sa.Column('extraction_error', sa.Text(), nullable=True),
    sa.Column('extraction_time_seconds', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usage_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('documents_processed', sa.Integer(), nullable=True),
    sa.Column('anthropic_cost', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('charged_amount', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('markup_multiplier', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['analysis_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usage_records')
    op.drop_table('text_extractions')
    op.drop_table('document_classifications')
    op.drop_table('analysis_results')
    op.drop_table('documents')
    op.drop_table('analysis_sessions')
    op.drop_index(op.f('ix_users_stripe_subscription_id'), table_name='users')
    op.drop_index(op.f('ix_users_stripe_customer_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('jobs')
    # ### end Alembic commands ###
